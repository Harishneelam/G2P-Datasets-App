history <- rbind(history,c(i,max(abs(b2-b))))
if(max(abs(b2-b)) < tol){
#print(paste("Converged at",i,"th iteration."))
break()
}
}
if(i==maxIter){
return(NA)
}
else{
kp <- list(b[,1],history[-1,])
names(kp) <- c("output","history")
return(kp)
}
}
solveSysGS(crossprod(X),crossprod(X,y))
source('/Users/harishneelam/Desktop/Quantgen/Codes/DAFunctions.R')
setwd('/Users/harishneelam/Desktop/Quantgen/GPDatasets/Datasets')
library(gert)
git_pull(repo = '/Users/harishneelam/Desktop/Quantgen/GPDatasets',remote = "origin", ref = "branch1")
getwd()
setwd('/Users/harishneelam/Downloads/')
raw <- read.vcfR('all.mergedSNPs.vcf.gz')
library(vcfR)
raw <- read.vcfR('all.mergedSNPs.vcf.gz')
dim(raw)
raw
# Get geno
geno <- as.matrix(vcfR2genind(raw))
dim(geno)
setwd('/Users/harishneelam/Desktop/Quantgen/GPDatasets/Datasets')
library(gert)
git_pull(repo = '/Users/harishneelam/Desktop/Quantgen/GPDatasets',remote = "origin", ref = "branch1")
# Details Needed
Data_DOI <- "https://doi.org/10.5061/dryad.0gb5mkkxf"
Publication_Link <- "https://link.springer.com/article/10.1186/s12864-020-6445-z"
Title <- "Integrated genome-wide investigations of the housefly, a global vector of diseases reveal unique dispersal patterns and bacterial communities across farms"
Abstract <- "Background
Houseflies (Musca domestica L.) live in intimate association with numerous microorganisms and is a vector of human pathogens. In temperate areas, houseflies will overwinter in environments constructed by humans and recolonize surrounding areas in early summer. However, the dispersal patterns and associated bacteria across season and location are unclear. We used genotyping-by-sequencing (GBS) for the simultaneous identification and genotyping of thousands of Single Nucleotide Polymorphisms (SNPs) to establish dispersal patterns of houseflies across farms. Secondly, we used 16S rRNA gene amplicon sequencing to establish the variation and association between bacterial communities and the housefly across farms.
Results
Using GBS we identified 18,000 SNPs across 400 individuals sampled within and between 11 dairy farms in Denmark. There was evidence for sub-structuring of Danish housefly populations and with genetic structure that differed across season and sex. Further, there was a strong isolation by distance (IBD) effect, but with large variation suggesting that other hidden geographic barriers are important. Large individual variations were observed in the community structure of the microbiome and it was found to be dependent on location, sex, and collection time. Furthermore, the relative prevalence of putative pathogens was highly dependent on location and collection time.
Conclusion
We were able to identify SNPs for the determination of the spatiotemporal housefly genetic structure, and to establish the variation and association between bacterial communities and the housefly across farms using novel next-generation sequencing (NGS) techniques. These results are important for disease prevention given the fine-scale population structure and IBD for the housefly, and that individual houseflies carry location specific bacteria including putative pathogens."
Species_Scientific_Name <- "Musca domestica"
Species_Common_Name <- "Housefly"
Data_Sharing_Link <- "https://datadryad.org/stash/dataset/doi:10.5061/dryad.0gb5mkkxf"
code <- "library(vcfR)
raw <- read.vcfR('all.mergedSNPs.vcf.gz')
# Get geno
geno <- as.matrix(vcfR2genind(raw))
dim(geno)
# Get map
map <- as.data.frame(raw@fix)
head(map)
"
# Meta data from code
# Enter Manually
N_Geno =
N_markers =
Download_Instructions = NA
# Meta Data
Meta_Data <- readxl::read_xlsx("/Users/harishneelam/Desktop/Quantgen/MetaData/Meta_data.xlsx")
ADD_DATA_FILES(code,Meta_Data,Data_DOI,Publication_Link,Title,Abstract,Species_Scientific_Name,
Species_Common_Name,Data_Sharing_Link,N_Geno,N_markers,Download_Instructions)
raw <- read.vcfR('all.mergedSNPs.mergedTaxa.vcf.gz')
setwd('/Users/harishneelam/Downloads/')
library(vcfR)
raw <- read.vcfR('all.mergedSNPs.mergedTaxa.vcf.gz')
source('/Users/harishneelam/Desktop/Quantgen/Codes/DAFunctions.R')
setwd('/Users/harishneelam/Desktop/Quantgen/GPDatasets/Datasets')
library(gert)
git_pull(repo = '/Users/harishneelam/Desktop/Quantgen/GPDatasets',remote = "origin", ref = "branch1")
# Details Needed
Data_DOI <- "https://doi.org/10.5061/dryad.0gb5mkkxf"
Publication_Link <- "https://link.springer.com/article/10.1186/s12864-020-6445-z"
Title <- "Integrated genome-wide investigations of the housefly, a global vector of diseases reveal unique dispersal patterns and bacterial communities across farms"
Abstract <- "Background
Houseflies (Musca domestica L.) live in intimate association with numerous microorganisms and is a vector of human pathogens. In temperate areas, houseflies will overwinter in environments constructed by humans and recolonize surrounding areas in early summer. However, the dispersal patterns and associated bacteria across season and location are unclear. We used genotyping-by-sequencing (GBS) for the simultaneous identification and genotyping of thousands of Single Nucleotide Polymorphisms (SNPs) to establish dispersal patterns of houseflies across farms. Secondly, we used 16S rRNA gene amplicon sequencing to establish the variation and association between bacterial communities and the housefly across farms.
Results
Using GBS we identified 18,000 SNPs across 400 individuals sampled within and between 11 dairy farms in Denmark. There was evidence for sub-structuring of Danish housefly populations and with genetic structure that differed across season and sex. Further, there was a strong isolation by distance (IBD) effect, but with large variation suggesting that other hidden geographic barriers are important. Large individual variations were observed in the community structure of the microbiome and it was found to be dependent on location, sex, and collection time. Furthermore, the relative prevalence of putative pathogens was highly dependent on location and collection time.
Conclusion
We were able to identify SNPs for the determination of the spatiotemporal housefly genetic structure, and to establish the variation and association between bacterial communities and the housefly across farms using novel next-generation sequencing (NGS) techniques. These results are important for disease prevention given the fine-scale population structure and IBD for the housefly, and that individual houseflies carry location specific bacteria including putative pathogens."
Species_Scientific_Name <- "Musca domestica"
Species_Common_Name <- "Housefly"
Data_Sharing_Link <- "https://datadryad.org/stash/dataset/doi:10.5061/dryad.0gb5mkkxf"
code <- "library(vcfR)
raw <- read.vcfR('all.mergedSNPs.vcf.gz')
# Get geno
geno <- as.matrix(vcfR2genind(raw))
dim(geno)
# Get map
map <- as.data.frame(raw@fix)
head(map)
"
# Meta data from code
# Enter Manually
N_Geno = 400
N_markers = 1935747
Download_Instructions = NA
# Meta Data
Meta_Data <- readxl::read_xlsx("/Users/harishneelam/Desktop/Quantgen/MetaData/Meta_data.xlsx")
ADD_DATA_FILES(code,Meta_Data,Data_DOI,Publication_Link,Title,Abstract,Species_Scientific_Name,
Species_Common_Name,Data_Sharing_Link,N_Geno,N_markers,Download_Instructions)
git_commit("Added new Datasets")
git_add(".")
git_commit("Added new Datasets")
git_push()
library(data.table)
# Get geno
geno <- fread('sorghum_germplasm_niger.hmp.txt')
setwd('/Users/harishneelam/Downloads/')
# Get geno
geno <- fread('sorghum_germplasm_niger.hmp.txt')
dim(geno)
geno[1,]
source('/Users/harishneelam/Desktop/Quantgen/Codes/DAFunctions.R')
setwd('/Users/harishneelam/Desktop/Quantgen/GPDatasets/Datasets')
# Details Needed
Data_DOI <- "https://doi.org/10.5061/dryad.5n2bs6r"
Publication_Link <- "https://cdnsciencepub.com/doi/10.1139/gen-2017-0131"
Title <- "Population genomics of sorghum (Sorghum bicolor) across diverse agroclimatic zones of Niger"
Abstract <- "Improving adaptation of staple crops in developing countries is important to ensure food security. In the West African country of Niger, the staple crop sorghum (Sorghum bicolor) is cultivated across diverse agroclimatic zones, but the genetic basis of local adaptation has not been described. The objectives of this study were to characterize the genomic diversity of sorghum from Niger and to identify genomic regions conferring local adaptation to agroclimatic zones and farmer preferences. We analyzed 516 Nigerien accessions for which local variety name, botanical race, and geographic origin were known. We discovered 144â€‰299 single nucleotide polymorphisms (SNPs) using genotyping-by-sequencing (GBS). We performed discriminant analysis of principal components (DAPC), which identified six genetic groups, and performed a genome scan for loci with high discriminant loadings. The highest discriminant coefficients were on chromosome 9, near the putative ortholog of maize flowering time adaptation gene Vgt1. Next, we characterized differentiation among local varieties and used a genome scan of pairwise FST values to identify SNPs associated with specific local varieties. Comparison of varieties named for light- versus dark-grain identified differentiation near Tannin1, the major gene responsible for grain tannins. These findings could facilitate genomics-assisted breeding of locally adapted and farmer-preferred sorghum varieties for Niger."
Species_Scientific_Name <- "Sorghum bicolor"
Species_Common_Name <- "Sorghum"
Data_Sharing_Link <- "https://datadryad.org/stash/dataset/doi:10.5061/dryad.5n2bs6r"
code <- "library(data.table)
# Get geno
geno <- fread('sorghum_germplasm_niger.hmp.txt')
dim(geno)
"
# Meta data from code
# Enter Manually
N_Geno = 516
N_markers = 144299
Download_Instructions = NA
# Meta Data
Meta_Data <- readxl::read_xlsx("/Users/harishneelam/Desktop/Quantgen/MetaData/Meta_data.xlsx")
ADD_DATA_FILES(code,Meta_Data,Data_DOI,Publication_Link,Title,Abstract,Species_Scientific_Name,
Species_Common_Name,Data_Sharing_Link,N_Geno,N_markers,Download_Instructions)
repo = '/Users/harishneelam/Desktop/Quantgen/GPDatasets'
GIT_UPLOAD(repo)
Meta_Data <- readxl::read_xlsx("/Users/harishneelam/Desktop/Quantgen/MetaData/Meta_data.xlsx")
require(httr)
require(RCurl)
require(rjson)
library(data.table)
library(DT)
require(rclipboard)
require(tidyverse)
require(magrittr)
library(rjson)
require(jsonlite)
require(curl)
library(readxl)
# ADD DATA FILES GENERAL
UPDATE_FILES <- function(Meta_Data){
setwd(Meta_Data$Folder)
# Generate Meta data files
add_meta_data(getwd(),Meta_Data[nrow(Meta_Data),])
print(paste("Data Updated for", Meta_Data$Folder))
}
# Generate Metadata files
Generate_meta_data <- function(path, meta_data){
h <- handle_setheaders(new_handle(), accept = "application/x-bibtex")
output_folder <- "output"
if (!dir.exists(output_folder)){
dir.create(output_folder)
}
setwd(output_folder)
publication <- meta_data[1, , drop = FALSE]
# json generator
json_data <- jsonlite::toJSON(as.list(publication), pretty = TRUE, auto_unbox = TRUE)
file_name <- "meta_data.json"
write(json_data, file = file_name)
# .md file generator
md_content <- paste0(
"# ", publication$Title, "\n\n",
"This publication discusses the ", publication$Abstract, "\n\n",
"It contains ", publication$N_Geno, " genotypes and ", publication$N_markers, " markers.\n\n",
"Title: ", publication$Title, "\n",
"Scientific name: ", publication$Scientific_Name, "\n",
"Common name: ", publication$Common_Name,"\n",
"DOI: ", publication$DOI, "\n"
)
file_name <- "meta_data.md"
write(md_content, file = file_name)
# .bib file generator
url <- publication$DOI
print(paste0("url: ", url))
try({
file_name <- "citation.bib"
curl_download(url, destfile = file_name, handle = h)
})
}
Meta_Data <- readxl::read_xlsx("/Users/harishneelam/Desktop/Quantgen/MetaData/Meta_data.xlsx")
setwd('/Users/harishneelam/Desktop/Quantgen/GPDatasets/Datasets')
for (i in 1:nrow(Meta_Data[1,])) {
UPDATE_FILES(Meta_Data[i,])
}
require(httr)
require(RCurl)
require(rjson)
library(data.table)
library(DT)
require(rclipboard)
require(tidyverse)
require(magrittr)
library(rjson)
require(jsonlite)
require(curl)
library(readxl)
# ADD DATA FILES GENERAL
UPDATE_FILES <- function(Meta_Data){
setwd(Meta_Data$Folder)
# Generate Meta data files
add_meta_data(getwd(),Meta_Data[nrow(Meta_Data),])
print(paste("Data Updated for", Meta_Data$Folder))
}
# Generate Metadata files
Generate_meta_data <- function(path, meta_data){
h <- handle_setheaders(new_handle(), accept = "application/x-bibtex")
output_folder <- "output"
if (!dir.exists(output_folder)){
dir.create(output_folder)
}
setwd(output_folder)
publication <- meta_data[1, , drop = FALSE]
# json generator
json_data <- jsonlite::toJSON(as.list(publication), pretty = TRUE, auto_unbox = TRUE)
file_name <- "meta_data.json"
write(json_data, file = file_name)
# .md file generator
md_content <- paste0(
"# ", publication$Title, "\n\n",
"This publication discusses: ", publication$Abstract, "\n\n",
"It contains ", publication$N_Geno, " genotypes and ", publication$N_markers, " markers.\n\n",
"Title: ", publication$Title, "\n",
"Scientific name: ", publication$Scientific_Name, "\n",
"Common name: ", publication$Common_Name,"\n",
"DOI: ", publication$DOI, "\n"
)
file_name <- "meta_data.md"
write(md_content, file = file_name)
# .bib file generator
url <- publication$DOI
print(paste0("url: ", url))
try({
file_name <- "citation.bib"
curl_download(url, destfile = file_name, handle = h)
})
}
Meta_Data <- readxl::read_xlsx("/Users/harishneelam/Desktop/Quantgen/MetaData/Meta_data.xlsx")
setwd('/Users/harishneelam/Desktop/Quantgen/GPDatasets/Datasets')
for (i in 1:nrow(Meta_Data[1,])) {
UPDATE_FILES(Meta_Data[i,])
}
require(httr)
require(RCurl)
require(rjson)
library(data.table)
library(DT)
require(rclipboard)
require(tidyverse)
require(magrittr)
library(rjson)
require(jsonlite)
require(curl)
library(readxl)
# ADD DATA FILES GENERAL
UPDATE_FILES <- function(Meta_Data){
setwd(Meta_Data$Folder)
# Generate Meta data files
add_meta_data(getwd(),Meta_Data[nrow(Meta_Data),])
print(paste("Data Updated for", Meta_Data$Folder))
}
# Generate Metadata files
Generate_meta_data <- function(path, meta_data){
h <- handle_setheaders(new_handle(), accept = "application/x-bibtex")
output_folder <- "output"
if (!dir.exists(output_folder)){
dir.create(output_folder)
}
setwd(output_folder)
publication <- meta_data[1, , drop = FALSE]
# json generator
json_data <- jsonlite::toJSON(as.list(publication), pretty = TRUE, auto_unbox = TRUE)
file_name <- "meta_data.json"
write(json_data, file = file_name)
# .md file generator
md_content <- paste0(
"# ", publication$Title, "\n\n",
"This publication discusses: ", publication$Abstract, "\n\n",
"It contains ", publication$N_Geno, " genotypes and ", publication$N_markers, " markers.\n\n",
"Title: ", publication$Title, "\n\n",
"Scientific name: ", publication$Scientific_Name, "\n\n",
"Common name: ", publication$Common_Name,"\n\n",
"DOI: ", publication$DOI, "\n\n"
)
file_name <- "meta_data.md"
write(md_content, file = file_name)
# .bib file generator
url <- publication$DOI
print(paste0("url: ", url))
try({
file_name <- "citation.bib"
curl_download(url, destfile = file_name, handle = h)
})
}
Meta_Data <- readxl::read_xlsx("/Users/harishneelam/Desktop/Quantgen/MetaData/Meta_data.xlsx")
setwd('/Users/harishneelam/Desktop/Quantgen/GPDatasets/Datasets')
for (i in 1:nrow(Meta_Data[1,])) {
UPDATE_FILES(Meta_Data[i,])
}
require(httr)
require(RCurl)
require(rjson)
library(data.table)
library(DT)
require(rclipboard)
require(tidyverse)
require(magrittr)
library(rjson)
require(jsonlite)
require(curl)
library(readxl)
# ADD DATA FILES GENERAL
UPDATE_FILES <- function(Meta_Data){
setwd(Meta_Data$Folder)
# Generate Meta data files
add_meta_data(getwd(),Meta_Data[nrow(Meta_Data),])
print(paste("Data Updated for", Meta_Data$Folder))
}
# Generate Metadata files
Generate_meta_data <- function(path, meta_data){
h <- handle_setheaders(new_handle(), accept = "application/x-bibtex")
output_folder <- "output"
if (!dir.exists(output_folder)){
dir.create(output_folder)
}
setwd(output_folder)
publication <- meta_data[1, , drop = FALSE]
# json generator
json_data <- jsonlite::toJSON(as.list(publication), pretty = TRUE, auto_unbox = TRUE)
file_name <- "meta_data.json"
write(json_data, file = file_name)
# .md file generator
md_content <- paste0(
"# ", publication$Title, "\n\n",
"This publication discusses: ", publication$Abstract, "\n\n",
"It contains ", publication$N_Geno, " genotypes and ", publication$N_markers, " markers.\n\n",
"Title: ", publication$Title, "\n\n",
"Scientific name: ", publication$Scientific_Name, "\n\n",
"Common name: ", publication$Common_Name,"\n\n",
"DOI: ", publication$DOI, "\n\n"
)
file_name <- "meta_data.md"
write(md_content, file = file_name)
# .bib file generator
url <- publication$DOI
print(paste0("url: ", url))
try({
file_name <- "citation.bib"
curl_download(url, destfile = file_name, handle = h)
})
}
Meta_Data <- readxl::read_xlsx("/Users/harishneelam/Desktop/Quantgen/MetaData/Meta_data.xlsx")
setwd('/Users/harishneelam/Desktop/Quantgen/GPDatasets/Datasets')
for (i in 1:nrow(Meta_Data)) {
UPDATE_FILES(Meta_Data[i,])
}
require(httr)
require(RCurl)
require(rjson)
library(data.table)
library(DT)
require(rclipboard)
require(tidyverse)
require(magrittr)
library(rjson)
require(jsonlite)
require(curl)
library(readxl)
# ADD DATA FILES GENERAL
UPDATE_FILES <- function(Meta_Data){
setwd(Meta_Data$Folder)
# Generate Meta data files
add_meta_data(getwd(),Meta_Data[nrow(Meta_Data),])
print(paste("Data Updated for", Meta_Data$Folder))
}
# Generate Metadata files
Generate_meta_data <- function(path, meta_data){
h <- handle_setheaders(new_handle(), accept = "application/x-bibtex")
output_folder <- "output"
if (!dir.exists(output_folder)){
dir.create(output_folder)
}
setwd(output_folder)
publication <- meta_data[1, , drop = FALSE]
# json generator
json_data <- jsonlite::toJSON(as.list(publication), pretty = TRUE, auto_unbox = TRUE)
file_name <- "meta_data.json"
write(json_data, file = file_name)
# .md file generator
md_content <- paste0(
"# ", publication$Title, "\n\n",
"This publication discusses: ", publication$Abstract, "\n\n",
"It contains ", publication$N_Geno, " genotypes and ", publication$N_markers, " markers.\n\n",
"Title: ", publication$Title, "\n\n",
"Scientific name: ", publication$Scientific_Name, "\n\n",
"Common name: ", publication$Common_Name,"\n\n",
"DOI: ", publication$DOI, "\n\n"
)
file_name <- "meta_data.md"
write(md_content, file = file_name)
# .bib file generator
url <- publication$DOI
print(paste0("url: ", url))
try({
file_name <- "citation.bib"
curl_download(url, destfile = file_name, handle = h)
})
}
Meta_Data <- readxl::read_xlsx("/Users/harishneelam/Desktop/Quantgen/MetaData/Meta_data.xlsx")
for (i in 1:nrow(Meta_Data)) {
setwd('/Users/harishneelam/Desktop/Quantgen/GPDatasets/Datasets')
UPDATE_FILES(Meta_Data[i,])
}
for (i in 1:nrow(Meta_Data[44:48.])) {
setwd('/Users/harishneelam/Desktop/Quantgen/GPDatasets/Datasets')
UPDATE_FILES(Meta_Data[i,])
}
Meta_Data <- readxl::read_xlsx("/Users/harishneelam/Desktop/Quantgen/MetaData/Meta_data.xlsx")
for (i in 1:nrow(Meta_Data[44:48,])) {
setwd('/Users/harishneelam/Desktop/Quantgen/GPDatasets/Datasets')
UPDATE_FILES(Meta_Data[i,])
}
setwd('/Users/harishneelam/Desktop/Quantgen/GPDatasets/Datasets')
UPDATE_FILES(Meta_Data[47,])
setwd('/Users/harishneelam/Desktop/Quantgen/GPDatasets/Datasets')
UPDATE_FILES(Meta_Data[45,])
setwd('/Users/harishneelam/Desktop/Quantgen/GPDatasets/Datasets')
UPDATE_FILES(Meta_Data[19,])
source('/Users/harishneelam/Desktop/Quantgen/Codes/DAFunctions.R')
repo = '/Users/harishneelam/Desktop/Quantgen/GPDatasets'
GIT_UPLOAD(repo)
repo <- '/Users/harishneelam/Desktop/Quantgen/GPDatasets'
GIT_UPLOAD(repo)
Meta_Data <- readxl::read_xlsx("/Users/harishneelam/Desktop/Quantgen/GPDatasets/Meta_data.xlsx")
Meta_Data
setwd('/Users/harishneelam/Desktop/Quantgen/GPDatasets/Datasets')
UPDATE_FILES(Meta_Data[110:122,])
require(httr)
require(RCurl)
require(rjson)
library(data.table)
library(DT)
require(rclipboard)
require(tidyverse)
require(magrittr)
library(rjson)
require(jsonlite)
require(curl)
library(readxl)
# ADD DATA FILES GENERAL
UPDATE_FILES <- function(Meta_Data){
setwd(Meta_Data$Folder)
# Generate Meta data files
add_meta_data(getwd(),Meta_Data[nrow(Meta_Data),])
print(paste("Data Updated for", Meta_Data$Folder))
}
# Generate Metadata files
Generate_meta_data <- function(path, meta_data){
h <- handle_setheaders(new_handle(), accept = "application/x-bibtex")
output_folder <- "output"
if (!dir.exists(output_folder)){
dir.create(output_folder)
}
setwd(output_folder)
publication <- meta_data[1, , drop = FALSE]
# json generator
json_data <- jsonlite::toJSON(as.list(publication), pretty = TRUE, auto_unbox = TRUE)
file_name <- "meta_data.json"
write(json_data, file = file_name)
# .md file generator
md_content <- paste0(
"# ", publication$Title, "\n\n",
"This publication discusses: ", publication$Abstract, "\n\n",
"It contains ", publication$N_Geno, " genotypes and ", publication$N_markers, " markers.\n\n",
"Title: ", publication$Title, "\n\n",
"Scientific name: ", publication$Scientific_Name, "\n\n",
"Common name: ", publication$Common_Name,"\n\n",
"DOI: ", publication$DOI, "\n\n"
)
file_name <- "meta_data.md"
write(md_content, file = file_name)
# .bib file generator
url <- publication$DOI
print(paste0("url: ", url))
try({
file_name <- "citation.bib"
curl_download(url, destfile = file_name, handle = h)
})
}
Meta_Data <- readxl::read_xlsx("/Users/harishneelam/Desktop/Quantgen/GPDatasets/Meta_data.xlsx")
setwd('/Users/harishneelam/Desktop/Quantgen/GPDatasets/Datasets')
UPDATE_FILES(Meta_Data[110:122,])
for (i in 110:122) {
setwd('/Users/harishneelam/Desktop/Quantgen/GPDatasets/Datasets')
UPDATE_FILES(Meta_Data[i,])
}
repo <- '/Users/harishneelam/Desktop/Quantgen/GPDatasets'
GIT_UPLOAD(repo)
